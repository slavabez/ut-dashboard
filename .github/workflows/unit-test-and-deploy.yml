name: Build project, run unit tests, deploy to Docker registry

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

jobs:
  build-and-test:
    runs-on: [self-hosted, linux]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install NPM dependencies
        run: npm install

      - name: Install NPM dependencies
        run: npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

      - name: Run unit tests
        run: npm run test

      - name: Log in to Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: git.ipbez.kz
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: git.ipbez.kz/slavabez/skazka-admin-2024:${{ github.ref_name }}
          build-args: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            AUTH_SECRET=${{ secrets.AUTH_SECRET }}

      - name: Deploy to Coolify (Staging)
        if: github.ref == 'refs/heads/main'
        uses: manicmade/coolify-actions@v0.0.1
        with:
          coolifyUrl: ${{ secrets.COOLIFY_URL }}
          coolifyAppId: ${{ secrets.COOLIFY_STAGING_APP_ID }}
          coolifyToken: ${{ secrets.COOLIFY_TOKEN }}

      - name: Deploy to Coolify (Production)
        if: github.ref == 'refs/heads/production'
        uses: manicmade/coolify-actions@v0.0.1
        with:
          coolifyUrl: ${{ secrets.COOLIFY_URL }}
          coolifyAppId: ${{ secrets.COOLIFY_PROD_APP_ID }}
          coolifyToken: ${{ secrets.COOLIFY_TOKEN }}
